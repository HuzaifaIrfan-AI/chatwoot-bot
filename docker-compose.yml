services:
  chatwoot_bot:
    container_name: chatwoot_bot
    build:
      context: .
      dockerfile: dockerfile
      tags:
        - "ghcr.io/huzaifairfan/chatwoot_bot:0.1"
        
    image: "ghcr.io/huzaifairfan/chatwoot_bot:0.1"
    restart: unless-stopped

    env_file:
      - .env

    command: uv run main.py

    volumes: 
      - ./log:/app/log
      
    extra_hosts:
      - "host.docker.internal:host-gateway"

    networks:
      - chatwoot_bot
      - kafka
      - web

    depends_on:
      - redis
      - qdrant


    healthcheck:
      test: ["CMD", "bash", "-c", "pgrep -f 'uv run main.py' >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis-chatwoot_bot
    image: redis/redis-stack:7.4.0-v5
    restart: always
    ports:
      - '6379:6379'
    command: redis-stack-server --save 20 1 --loglevel warning --requirepass aa
    volumes: 
      - redis-chatwoot_bot:/data

    networks:
      - chatwoot_bot

    healthcheck:
      test: ["CMD", "redis-cli", "-a", "aa", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
      
  qdrant:
    container_name: qdrant-chatwoot_bot
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_storage:/qdrant/storage:z

    restart: unless-stopped
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__STORAGE__PATH=/qdrant/storage
      - QDRANT__STORAGE__OPTIMIZE_ON_STARTUP=true
      - QDRANT__LOG_LEVEL=info
      - QDRANT__SERVICE__WORKERS=4
    networks:
      - chatwoot_bot
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/6333"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  redis-chatwoot_bot:


  

networks:
  chatwoot_bot:
    driver: bridge
  kafka:
    external: true
  web:
    external: true
